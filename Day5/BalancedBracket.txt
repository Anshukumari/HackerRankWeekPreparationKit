using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Collections;
using System.ComponentModel;
using System.Diagnostics.CodeAnalysis;
using System.Globalization;
using System.IO;
using System.Linq;
using System.Reflection;
using System.Runtime.Serialization;
using System.Text.RegularExpressions;
using System.Text;
using System;

class Result
{

    /*
     * Complete the 'isBalanced' function below.
     *
     * The function is expected to return a STRING.
     * The function accepts STRING s as parameter.
     */

    public static string isBalanced(string s)
    {
        Stack<char> charList = new Stack<char>();
        char[] chList = s.ToCharArray();
        for(int i=0;i<chList.Length;i++)
        {
            if (charList.Count == 0)
            {
                charList.Push(chList[i]);
            }
            else
            {
                if ((charList.Peek()=='{' && chList[i] == '}') || (charList.Peek() == '[' && chList[i] == ']') || (charList.Peek() == '(' && chList[i] == ')'))
                {
                    charList.Pop();
                }
                else
                {
                    charList.Push(chList[i]);
                }
            }
        }
        if (charList.Count > 0)
            return "NO";
        else
            return "YES";
    }

}

class Solution
{
    public static void Main(string[] args)
    {
      //  TextWriter textWriter = new StreamWriter(@System.Environment.GetEnvironmentVariable("OUTPUT_PATH"), true);

        int t = Convert.ToInt32(Console.ReadLine().Trim());

        for (int tItr = 0; tItr < t; tItr++)
        {
            string s = Console.ReadLine();

            string result = Result.isBalanced(s);

            Console.WriteLine(result);
        }

        Console.ReadLine();
    }
}
